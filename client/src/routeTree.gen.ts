/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/_auth'
import { Route as AuthEventsIdImport } from './routes/_auth/events/$id'

// Create Virtual Routes

const RegisterLazyImport = createFileRoute('/register')()
const ProfileLazyImport = createFileRoute('/profile')()
const LoginLazyImport = createFileRoute('/login')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const AuthPlayersLazyImport = createFileRoute('/_auth/players')()
const AuthPlacesLazyImport = createFileRoute('/_auth/places')()
const AuthDoublesLazyImport = createFileRoute('/_auth/doubles')()
const AuthCategoriesLazyImport = createFileRoute('/_auth/categories')()
const AuthEventsIndexLazyImport = createFileRoute('/_auth/events/')()

// Create/Update Routes

const RegisterLazyRoute = RegisterLazyImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/register.lazy').then((d) => d.Route))

const ProfileLazyRoute = ProfileLazyImport.update({
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/profile.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AuthPlayersLazyRoute = AuthPlayersLazyImport.update({
  path: '/players',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/_auth/players.lazy').then((d) => d.Route))

const AuthPlacesLazyRoute = AuthPlacesLazyImport.update({
  path: '/places',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/_auth/places.lazy').then((d) => d.Route))

const AuthDoublesLazyRoute = AuthDoublesLazyImport.update({
  path: '/doubles',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/_auth/doubles.lazy').then((d) => d.Route))

const AuthCategoriesLazyRoute = AuthCategoriesLazyImport.update({
  path: '/categories',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth/categories.lazy').then((d) => d.Route),
)

const AuthEventsIndexLazyRoute = AuthEventsIndexLazyImport.update({
  path: '/events/',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth/events/index.lazy').then((d) => d.Route),
)

const AuthEventsIdRoute = AuthEventsIdImport.update({
  path: '/events/$id',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      preLoaderRoute: typeof ProfileLazyImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      preLoaderRoute: typeof RegisterLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth/categories': {
      preLoaderRoute: typeof AuthCategoriesLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/doubles': {
      preLoaderRoute: typeof AuthDoublesLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/places': {
      preLoaderRoute: typeof AuthPlacesLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/players': {
      preLoaderRoute: typeof AuthPlayersLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/events/$id': {
      preLoaderRoute: typeof AuthEventsIdImport
      parentRoute: typeof AuthImport
    }
    '/_auth/events/': {
      preLoaderRoute: typeof AuthEventsIndexLazyImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  AuthRoute.addChildren([
    AuthCategoriesLazyRoute,
    AuthDoublesLazyRoute,
    AuthPlacesLazyRoute,
    AuthPlayersLazyRoute,
    AuthEventsIdRoute,
    AuthEventsIndexLazyRoute,
  ]),
  AboutLazyRoute,
  LoginLazyRoute,
  ProfileLazyRoute,
  RegisterLazyRoute,
])

/* prettier-ignore-end */
